//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StepUpDAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TraineeProgramContext : DbContext
    {
        public TraineeProgramContext()
            : base("name=TraineeProgramContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminCredintial> AdminCredintials { get; set; }
        public virtual DbSet<Faculty> Faculties { get; set; }
        public virtual DbSet<LttsCredintial> LttsCredintials { get; set; }
        public virtual DbSet<TraineeInformation> TraineeInformations { get; set; }
    
        public virtual int uspFacultyDetails(Nullable<int> facultyPS, string facultyName, string emailID, string track, string password)
        {
            var facultyPSParameter = facultyPS.HasValue ?
                new ObjectParameter("FacultyPS", facultyPS) :
                new ObjectParameter("FacultyPS", typeof(int));
    
            var facultyNameParameter = facultyName != null ?
                new ObjectParameter("FacultyName", facultyName) :
                new ObjectParameter("FacultyName", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var trackParameter = track != null ?
                new ObjectParameter("Track", track) :
                new ObjectParameter("Track", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspFacultyDetails", facultyPSParameter, facultyNameParameter, emailIDParameter, trackParameter, passwordParameter);
        }
    
        public virtual int uspLoginDetails(string logid, string loginPass, string email)
        {
            var logidParameter = logid != null ?
                new ObjectParameter("Logid", logid) :
                new ObjectParameter("Logid", typeof(string));
    
            var loginPassParameter = loginPass != null ?
                new ObjectParameter("LoginPass", loginPass) :
                new ObjectParameter("LoginPass", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspLoginDetails", logidParameter, loginPassParameter, emailParameter);
        }
    
        public virtual int uspRequestCredintials(string loginID, string loginPassword, string email)
        {
            var loginIDParameter = loginID != null ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(string));
    
            var loginPasswordParameter = loginPassword != null ?
                new ObjectParameter("LoginPassword", loginPassword) :
                new ObjectParameter("LoginPassword", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspRequestCredintials", loginIDParameter, loginPasswordParameter, emailParameter);
        }
    
        public virtual int uspRequestDetails(Nullable<int> pSno, string emailid, string currentSkillSet, string expectedTraining_Phase1, string expectedTraining_Phase2, Nullable<System.DateTime> date)
        {
            var pSnoParameter = pSno.HasValue ?
                new ObjectParameter("PSno", pSno) :
                new ObjectParameter("PSno", typeof(int));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("Emailid", emailid) :
                new ObjectParameter("Emailid", typeof(string));
    
            var currentSkillSetParameter = currentSkillSet != null ?
                new ObjectParameter("CurrentSkillSet", currentSkillSet) :
                new ObjectParameter("CurrentSkillSet", typeof(string));
    
            var expectedTraining_Phase1Parameter = expectedTraining_Phase1 != null ?
                new ObjectParameter("expectedTraining_Phase1", expectedTraining_Phase1) :
                new ObjectParameter("expectedTraining_Phase1", typeof(string));
    
            var expectedTraining_Phase2Parameter = expectedTraining_Phase2 != null ?
                new ObjectParameter("expectedTraining_Phase2", expectedTraining_Phase2) :
                new ObjectParameter("expectedTraining_Phase2", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspRequestDetails", pSnoParameter, emailidParameter, currentSkillSetParameter, expectedTraining_Phase1Parameter, expectedTraining_Phase2Parameter, dateParameter);
        }
    
        public virtual int uspUpdatepass(string loginID, string loginPassword, string email)
        {
            var loginIDParameter = loginID != null ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(string));
    
            var loginPasswordParameter = loginPassword != null ?
                new ObjectParameter("LoginPassword", loginPassword) :
                new ObjectParameter("LoginPassword", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdatepass", loginIDParameter, loginPasswordParameter, emailParameter);
        }
    }
}
